import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.alibaba.arouter'
    id 'org.greenrobot.greendao'
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        renderscriptTargetApi 19
        renderscriptSupportModeEnabled true

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a'
        }

        packagingOptions {
            doNotStrip '*/mips/*.so'
            doNotStrip '*/mips64/*.so'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
    }

    dataBinding {
        enabled true
    }

    signingConfigs {
        release {
            storeFile file('../key/saihub.jks')
            storePassword 'saihub2022'
            keyAlias 'saihub'
            keyPassword 'saihub2022'
        }
        debug {
            storeFile file('../key/saihub.jks')
            storePassword 'saihub2022'
            keyAlias 'saihub'
            keyPassword 'saihub2022'
        }
    }


    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            main.kotlin.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res', 'src/main/res-night']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    greendao {
        schemaVersion 1
        daoPackage 'com.linktech.saihub.greendao'
        targetGenDir 'src/main/java'
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
//            def fileName = "SAIHUB" + "_v${defaultConfig.versionName}_${getNowTime()}_" + variant.name + ".apk"
            def fileName = "SAIHUB_" + variant.name + "_v${defaultConfig.versionName}_${getNowTime()}_" + ".apk"
            outputFileName = fileName
            outputFileName = fileName
        }
    }
}

static def getNowTime() {
//    return new SimpleDateFormat("yyyy_MM_dd-HH_mm_ss", Locale.CHINA).format(new Date());
    return new SimpleDateFormat("MM_dd_HH_mm", Locale.CHINA).format(new Date())
}

dependencies {
    implementation project(path: ':websocketlib')

    // New version
    def multidex_version = "2.0.1"


    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    testImplementation 'junit:junit:'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'

    //sys
    implementation "androidx.multidex:multidex:$multidex_version"

    //net
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'

    //ARouter
    kapt 'com.alibaba:arouter-compiler:1.2.1'
    implementation 'com.alibaba:arouter-api:1.4.0'

    // greenDao
    implementation 'org.greenrobot:greendao:3.3.0' // add library
    implementation 'io.github.yuweiguocn:GreenDaoUpgradeHelper:v2.2.1'

    //sp
    implementation 'com.tencent:mmkv-static:1.1.0'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //zxing-lite AndroidX 版本
    implementation('com.github.jenly1314:zxing-lite:2.1.1') {
        exclude module: 'listenablefuture'
    }

    //round image
    implementation 'com.makeramen:roundedimageview:2.3.0'

    //指纹识别
    implementation 'com.wei.android.lib:fingerprintidentify:1.2.6'

    //EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //bc-ur
    implementation 'com.sparrowwallet:hummingbird:1.6.4'

    //bitcoin
    implementation('org.bitcoinj:bitcoinj-core:0.16') {
        exclude module: 'guava'
    }

    //adapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    implementation "com.google.guava:guava:31.0.1-android"

    implementation 'com.qmuiteam:qmui:2.0.0-alpha10'

    //lottie动画
    implementation 'com.airbnb.android:lottie:4.1.0'

    //tablayout
    implementation 'com.github.angcyo.DslTablayout:TabLayout:3.0.0'
    implementation 'com.github.angcyo.DslTablayout:ViewPager2Delegate:3.0.0'
    implementation 'com.github.angcyo.DslTablayout:ViewPager1Delegate:3.0.0'

    implementation 'com.github.zhpanvip:viewpagerindicator:1.2.1'

    //刷新  SmartRefreshLayout
//    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
//    implementation 'com.scwang.smart:refresh-header-material:2.0.3'    //谷歌刷新头

    implementation 'com.github.liangjingkanji:BRV:1.3.52'

    //权限管理
    implementation 'pub.devrel:easypermissions:3.0.0'
    //折线
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'com.github.iielse:switchbutton:1.0.4'

    implementation 'com.github.donkingliang:ConsecutiveScroller:4.6.0'

    // OpenCV基础库（*必须）
    implementation 'com.github.jenly1314.WeChatQRCode:opencv:1.1.1'
    implementation 'com.github.jenly1314.WeChatQRCode:opencv-armv7a:1.1.1'

    // OpenCV的其他ABI（可选），根据你的需求选择想要的so支持
//    implementation 'com.github.jenly1314.WeChatQRCode:opencv-armv64:1.1.1'
//    implementation 'com.github.jenly1314.WeChatQRCode:opencv-x86:1.1.1'
//    implementation 'com.github.jenly1314.WeChatQRCode:opencv-x86_64:1.1.1'

    // 微信二维码识别功能（可选）
    implementation 'com.github.jenly1314.WeChatQRCode:wechat-qrcode:1.1.1'

    // 微信二维码扫码功能（可选）
    implementation 'com.github.jenly1314.WeChatQRCode:wechat-qrcode-scanning:1.1.1'
    //MLKit的Camera核心库：如果您使用了wechat-qrcode-scanning，则必须依赖mlkit-camera-core库
    implementation 'com.github.jenly1314.MLKit:mlkit-camera-core:1.0.3'
}

